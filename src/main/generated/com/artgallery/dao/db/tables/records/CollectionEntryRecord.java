/*
 * This file is generated by jOOQ.
 */
package com.artgallery.dao.db.tables.records;


import com.artgallery.dao.db.tables.CollectionEntry;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.17.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CollectionEntryRecord extends UpdatableRecordImpl<CollectionEntryRecord> implements Record4<Long, Long, Long, Long> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>COLLECTION_ENTRY.ID</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>COLLECTION_ENTRY.ID</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>COLLECTION_ENTRY.PAINTING_ID</code>.
     */
    public void setPaintingId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>COLLECTION_ENTRY.PAINTING_ID</code>.
     */
    public Long getPaintingId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>COLLECTION_ENTRY.AUTHOR_ID</code>.
     */
    public void setAuthorId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>COLLECTION_ENTRY.AUTHOR_ID</code>.
     */
    public Long getAuthorId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>COLLECTION_ENTRY.CURATOR_ID</code>.
     */
    public void setCuratorId(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>COLLECTION_ENTRY.CURATOR_ID</code>.
     */
    public Long getCuratorId() {
        return (Long) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, Long, Long, Long> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Long, Long, Long, Long> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return CollectionEntry.COLLECTION_ENTRY.ID;
    }

    @Override
    public Field<Long> field2() {
        return CollectionEntry.COLLECTION_ENTRY.PAINTING_ID;
    }

    @Override
    public Field<Long> field3() {
        return CollectionEntry.COLLECTION_ENTRY.AUTHOR_ID;
    }

    @Override
    public Field<Long> field4() {
        return CollectionEntry.COLLECTION_ENTRY.CURATOR_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getPaintingId();
    }

    @Override
    public Long component3() {
        return getAuthorId();
    }

    @Override
    public Long component4() {
        return getCuratorId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getPaintingId();
    }

    @Override
    public Long value3() {
        return getAuthorId();
    }

    @Override
    public Long value4() {
        return getCuratorId();
    }

    @Override
    public CollectionEntryRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public CollectionEntryRecord value2(Long value) {
        setPaintingId(value);
        return this;
    }

    @Override
    public CollectionEntryRecord value3(Long value) {
        setAuthorId(value);
        return this;
    }

    @Override
    public CollectionEntryRecord value4(Long value) {
        setCuratorId(value);
        return this;
    }

    @Override
    public CollectionEntryRecord values(Long value1, Long value2, Long value3, Long value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CollectionEntryRecord
     */
    public CollectionEntryRecord() {
        super(CollectionEntry.COLLECTION_ENTRY);
    }

    /**
     * Create a detached, initialised CollectionEntryRecord
     */
    public CollectionEntryRecord(Long id, Long paintingId, Long authorId, Long curatorId) {
        super(CollectionEntry.COLLECTION_ENTRY);

        setId(id);
        setPaintingId(paintingId);
        setAuthorId(authorId);
        setCuratorId(curatorId);
    }
}
