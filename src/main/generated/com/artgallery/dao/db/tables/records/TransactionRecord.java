/*
 * This file is generated by jOOQ.
 */
package com.artgallery.dao.db.tables.records;


import com.artgallery.dao.db.tables.Transaction;

import java.time.LocalDate;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.17.8"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TransactionRecord extends UpdatableRecordImpl<TransactionRecord> implements Record7<Long, Long, Long, Long, Long, Long, LocalDate> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>TRANSACTION.ID</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>TRANSACTION.ID</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>TRANSACTION.PAINTING_ID</code>.
     */
    public void setPaintingId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>TRANSACTION.PAINTING_ID</code>.
     */
    public Long getPaintingId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>TRANSACTION.CLIENT_ID</code>.
     */
    public void setClientId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>TRANSACTION.CLIENT_ID</code>.
     */
    public Long getClientId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>TRANSACTION.CURATOR_ID</code>.
     */
    public void setCuratorId(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>TRANSACTION.CURATOR_ID</code>.
     */
    public Long getCuratorId() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>TRANSACTION.BANK_ACCOUNT_ID</code>.
     */
    public void setBankAccountId(Long value) {
        set(4, value);
    }

    /**
     * Getter for <code>TRANSACTION.BANK_ACCOUNT_ID</code>.
     */
    public Long getBankAccountId() {
        return (Long) get(4);
    }

    /**
     * Setter for <code>TRANSACTION.value</code>.
     */
    public void setValue(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>TRANSACTION.value</code>.
     */
    public Long getValue() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>TRANSACTION.DATE</code>.
     */
    public void setDate(LocalDate value) {
        set(6, value);
    }

    /**
     * Getter for <code>TRANSACTION.DATE</code>.
     */
    public LocalDate getDate() {
        return (LocalDate) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Long, Long, Long, Long, Long, Long, LocalDate> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Long, Long, Long, Long, Long, Long, LocalDate> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Transaction.TRANSACTION.ID;
    }

    @Override
    public Field<Long> field2() {
        return Transaction.TRANSACTION.PAINTING_ID;
    }

    @Override
    public Field<Long> field3() {
        return Transaction.TRANSACTION.CLIENT_ID;
    }

    @Override
    public Field<Long> field4() {
        return Transaction.TRANSACTION.CURATOR_ID;
    }

    @Override
    public Field<Long> field5() {
        return Transaction.TRANSACTION.BANK_ACCOUNT_ID;
    }

    @Override
    public Field<Long> field6() {
        return Transaction.TRANSACTION.VALUE;
    }

    @Override
    public Field<LocalDate> field7() {
        return Transaction.TRANSACTION.DATE;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getPaintingId();
    }

    @Override
    public Long component3() {
        return getClientId();
    }

    @Override
    public Long component4() {
        return getCuratorId();
    }

    @Override
    public Long component5() {
        return getBankAccountId();
    }

    @Override
    public Long component6() {
        return getValue();
    }

    @Override
    public LocalDate component7() {
        return getDate();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getPaintingId();
    }

    @Override
    public Long value3() {
        return getClientId();
    }

    @Override
    public Long value4() {
        return getCuratorId();
    }

    @Override
    public Long value5() {
        return getBankAccountId();
    }

    @Override
    public Long value6() {
        return getValue();
    }

    @Override
    public LocalDate value7() {
        return getDate();
    }

    @Override
    public TransactionRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public TransactionRecord value2(Long value) {
        setPaintingId(value);
        return this;
    }

    @Override
    public TransactionRecord value3(Long value) {
        setClientId(value);
        return this;
    }

    @Override
    public TransactionRecord value4(Long value) {
        setCuratorId(value);
        return this;
    }

    @Override
    public TransactionRecord value5(Long value) {
        setBankAccountId(value);
        return this;
    }

    @Override
    public TransactionRecord value6(Long value) {
        setValue(value);
        return this;
    }

    @Override
    public TransactionRecord value7(LocalDate value) {
        setDate(value);
        return this;
    }

    @Override
    public TransactionRecord values(Long value1, Long value2, Long value3, Long value4, Long value5, Long value6, LocalDate value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TransactionRecord
     */
    public TransactionRecord() {
        super(Transaction.TRANSACTION);
    }

    /**
     * Create a detached, initialised TransactionRecord
     */
    public TransactionRecord(Long id, Long paintingId, Long clientId, Long curatorId, Long bankAccountId, Long value, LocalDate date) {
        super(Transaction.TRANSACTION);

        setId(id);
        setPaintingId(paintingId);
        setClientId(clientId);
        setCuratorId(curatorId);
        setBankAccountId(bankAccountId);
        setValue(value);
        setDate(date);
    }
}
